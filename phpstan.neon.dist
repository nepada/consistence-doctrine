includes:
    - vendor/phpstan/phpstan-strict-rules/rules.neon
    - vendor/spaze/phpstan-disallowed-calls/extension.neon
    - vendor/spaze/phpstan-disallowed-calls/disallowed-dangerous-calls.neon
    - vendor/spaze/phpstan-disallowed-calls/disallowed-execution-calls.neon
    - vendor/spaze/phpstan-disallowed-calls/disallowed-insecure-calls.neon
    - vendor/spaze/phpstan-disallowed-calls/disallowed-loose-calls.neon
    - tests/PHPStan/disallowedCalls.neon

parameters:
    level: max
    paths:
        - src

    exceptions:
        implicitThrows: false
        check:
            missingCheckedExceptionInThrows: true
            tooWideThrowType: true
        uncheckedExceptionClasses:
            - LogicException
            - Doctrine\DBAL\Types\ConversionException
            - Nette\InvalidStateException

    ignoreErrors:
        - '~Parameter \#1 \$value \(.*\|TEnum of Consistence\\Enum\\Enum\|null\) of method Nepada\\ConsistenceDoctrine\\(String|Integer|Float|Boolean)EnumType::convertToDatabaseValue\(\) should be contravariant with parameter \$value .* of method Doctrine\\DBAL\\Types\\.*Type::convertToDatabaseValue\(\)~'
        - '~^Parameter \#1 \$value of method Nepada\\ConsistenceDoctrine\\EnumType\<TEnum of Consistence\\Enum\\Enum\>\:\:convertToPHPValue\(\) expects bool\|float\|int\|string\|TEnum of Consistence\\Enum\\Enum\|null, mixed given\.$~'
        -
            message: "~Call to function is_subclass_of\\(\\) with class-string<T of Consistence\\\\Enum\\\\Enum> and 'Consistence\\\\\\\\Enum.*' will always evaluate to true.*~"
            path: src/ConsistenceDoctrine/EnumType.php
        -
            message: "#^Method Nepada\\\\ConsistenceDoctrine\\\\EnumType\\:\\:convertToDatabaseValue\\(\\) should return bool\\|float\\|int\\|string\\|null but returns mixed\\.$#"
            count: 1
            path: src/ConsistenceDoctrine/EnumType.php
